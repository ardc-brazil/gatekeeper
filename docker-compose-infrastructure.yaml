version: '3'

services:
  gatekeeper:
    build: .
    image: gatekeeper
    container_name: datamap_gatekeeper
    restart: always
    env_file:
      - ${ENV_FILE_PATH}
    ports: 
      - '9092:9092'
    networks:
      - gatekeeper_gatekeeper-network

  minio:
    image: minio/minio:RELEASE.2024-03-21T23-13-43Z
    command: server /storage --console-address ":9001"
    container_name: datamap_min_io
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - ${ENV_FILE_PATH}
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
        - gatekeeper_gatekeeper-network
    hostname: minio
    volumes:
      - storage:/storage/
  
  tusd:
    image: tusproject/tusd:v2.4
    container_name: datamap_tusd
    restart: always
    ports: 
      - "1080:1080"
    env_file:
      - ${ENV_FILE_PATH}
    entrypoint: /bin/sh -c
    command: ["tusd -port 1080 -s3-bucket datamap -s3-endpoint $${TUS_S3_ENDPOINT} -hooks-http $${TUS_HOOK_API} -cors-allow-headers X-User-Token,X-User-Id"]
    depends_on: 
      - minio
    networks:
      - gatekeeper_gatekeeper-network

volumes:
  storage:
    driver: local
    driver_opts:
      device: ${STORAGE_DOCKER_VOLUME}
      o: bind
      type: local

networks:
  gatekeeper_gatekeeper-network:
    driver: bridge
    name: gatekeeper_gatekeeper-network
