"""Remove zip name from dataset version

Revision ID: ea1a0c6c42dd
Revises: 8bd38b992ce3
Create Date: 2024-05-22 20:59:36.748685

"""
from typing import Sequence, Union

from alembic import op
from sqlalchemy import inspect
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ea1a0c6c42dd'
down_revision: str = '8bd38b992ce3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def column_exists(table_name, column_name):
    bind = op.get_context().bind
    insp = inspect(bind)
    columns = insp.get_columns(table_name)
    return any(c["name"] == column_name for c in columns)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    if column_exists('dataset_versions', 'zip_name'): 
        op.drop_column('dataset_versions', 'zip_name')
    if column_exists('dataset_versions', 'zip_status'): 
        op.drop_column('dataset_versions', 'zip_status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    if not column_exists('dataset_versions', 'zip_status'): 
        op.add_column('dataset_versions', sa.Column('zip_status', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
    if not column_exists('dataset_versions', 'zip_name'): 
        op.add_column('dataset_versions', sa.Column('zip_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True))
    # ### end Alembic commands ###
